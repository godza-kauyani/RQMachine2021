{"ast":null,"code":"var _jsxFileName = \"/storage/emulated/0/RandomQouteMachine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport quotes from 'quotesy';\nimport './App.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [quote, setQuote] = useState(() => {\n    return quotes.random();\n  });\n\n  function getQuotes() {\n    setQuote(() => {\n      return quotes.random();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quote-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"text\",\n      children: quote.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"author\",\n      children: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"new-quote\",\n      onClick: getQuotes,\n      children: \"New Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"twitter.com/intent/tweet\",\n      id: \"tweet-quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oIfeKKfdCgAzIbO/Fo6qAgOjvZ4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/storage/emulated/0/RandomQouteMachine/src/App.js"],"names":["useState","quotes","styled","App","quote","setQuote","random","getQuotes","text","author"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,MAAI;AACnC,WAAOC,MAAM,CAACK,MAAP,EAAP;AACD,GAF+B,CAAhC;;AAGA,WAASC,SAAT,GAAoB;AAClBF,IAAAA,QAAQ,CAAC,MAAI;AACX,aAAOJ,MAAM,CAACK,MAAP,EAAP;AACD,KAFO,CAAR;AAGD;;AACD,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACE;AAAG,MAAA,EAAE,EAAC,MAAN;AAAA,gBAAcF,KAAK,CAACI;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,EAAE,EAAC,QAAN;AAAA,gBAAgBJ,KAAK,CAACK;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,EAAE,EAAC,WAAX;AAAuB,MAAA,OAAO,EAAEF,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAG,MAAA,IAAI,EAAC,0BAAR;AAAmC,MAAA,EAAE,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlBQJ,G;;KAAAA,G;AAoBT,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\nimport quotes from 'quotesy'\nimport './App.css'\nimport styled from 'styled-components'\n\n\nfunction App() {\n  const[quote,setQuote] = useState(()=>{\n    return quotes.random()\n  })\n  function getQuotes(){\n    setQuote(()=>{\n      return quotes.random()\n    })\n  }\n  return (\n    <div id='quote-box'>\n      <p id='text'>{quote.text}</p>\n      <p id='author'>{quote.author}</p>\n      <button id='new-quote' onClick={getQuotes}>New Quote</button>\n      <a href='twitter.com/intent/tweet' id='tweet-quote'/>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}