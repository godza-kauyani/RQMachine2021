{"ast":null,"code":"const quotes = require(\"../quotes.json\");\n/**\n * `parse_json` returns and Array of quote Objects.\n */\n\n\nfunction parse_json() {\n  return quotes;\n}\n/**\n * `random` returns a random quote\n * returns Object - a random quote from the list\n */\n\n\nfunction random() {\n  return quotes[Math.floor(Math.random() * quotes.length)];\n}\n/**\n * `random_by_tag` returns a random quote for a specific tag\n * returns Object - a random quote from the list with the desired tag\n */\n\n\nfunction random_by_tag(tag) {\n  const q_by_tag = quotes.filter(q => {\n    return q.text.includes(tag) || q.tags && q.tags.includes(tag);\n  });\n  return q_by_tag[Math.floor(Math.random() * q_by_tag.length)];\n}\n\nmodule.exports = {\n  parse_json: parse_json,\n  random: random,\n  random_by_tag: random_by_tag\n};","map":{"version":3,"sources":["/storage/emulated/0/RandomQouteMachine/node_modules/quotesy/lib/index.js"],"names":["quotes","require","parse_json","random","Math","floor","length","random_by_tag","tag","q_by_tag","filter","q","text","includes","tags","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAAtB;AAEA;AACA;AACA;;;AACA,SAASC,UAAT,GAAuB;AACrB,SAAOF,MAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASG,MAAT,GAAmB;AACjB,SAAOH,MAAM,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBH,MAAM,CAACM,MAAlC,CAAD,CAAb;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASC,aAAT,CAAwBC,GAAxB,EAA6B;AAC3B,QAAMC,QAAQ,GAAGT,MAAM,CAACU,MAAP,CAAeC,CAAD,IAAO;AACpC,WAAOA,CAAC,CAACC,IAAF,CAAOC,QAAP,CAAgBL,GAAhB,KAAyBG,CAAC,CAACG,IAAF,IAAUH,CAAC,CAACG,IAAF,CAAOD,QAAP,CAAgBL,GAAhB,CAA1C;AACD,GAFgB,CAAjB;AAGA,SAAOC,QAAQ,CAACL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBM,QAAQ,CAACH,MAApC,CAAD,CAAf;AACD;;AAKDS,MAAM,CAACC,OAAP,GAAiB;AACfd,EAAAA,UAAU,EAAEA,UADG;AAEfC,EAAAA,MAAM,EAAEA,MAFO;AAGfI,EAAAA,aAAa,EAAEA;AAHA,CAAjB","sourcesContent":["const quotes = require(\"../quotes.json\")\n\n/**\n * `parse_json` returns and Array of quote Objects.\n */\nfunction parse_json () {\n  return quotes;\n}\n\n/**\n * `random` returns a random quote\n * returns Object - a random quote from the list\n */\nfunction random () {\n  return quotes[Math.floor(Math.random() * quotes.length)];\n}\n\n/**\n * `random_by_tag` returns a random quote for a specific tag\n * returns Object - a random quote from the list with the desired tag\n */\nfunction random_by_tag (tag) {\n  const q_by_tag = quotes.filter((q) => {\n    return q.text.includes(tag) || (q.tags && q.tags.includes(tag))\n  })\n  return q_by_tag[Math.floor(Math.random() * q_by_tag.length)];\n}\n\n\n\n\nmodule.exports = {\n  parse_json: parse_json,\n  random: random,\n  random_by_tag: random_by_tag\n};\n"]},"metadata":{},"sourceType":"script"}